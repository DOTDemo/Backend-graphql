types: ./types.graphql

functions:
  signup:
    type: resolver
    schema: src/signup.graphql
    handler:
      code: 
        src: src/signup.ts

  authenticate:
    type: resolver
    schema: src/authenticate.graphql
    handler:
      code: 
        src: src/authenticate.ts

  loggedInUser:
    type: resolver
    schema: src/loggedInUser.graphql
    handler:
      code: 
        src: src/loggedInUser.ts

  updatePassword:
    type: resolver
    schema: src/updatePassword.graphql
    handler:
      code: 
        src: src/updatePassword.ts
   
  updateEmail:
    type: resolver
    schema: src/updateEmail.graphql
    handler:
      code: 
        src: src/updateEmail.ts
  
<<<<<<< HEAD
  triggerPasswordReset:
    type: resolver
    schema: src/triggerPasswordReset.graphql
    handler:
      code: 
        src: src/triggerPasswordReset.ts

  sendPasswordResetEmail: 
    type: resolver
    schema: src/sendPasswordResetEmail.graphql
    handler:
      code: 
        src: src/sendPasswordResetEmail.ts   

=======
  passwordReset:
    type: resolver
    schema: ./src/passwordReset.graphql
    handler:
      code:
        src: ./src/passwordReset.ts
  
  triggerPasswordReset:
    type: resolver
    schema: ./src/triggerPasswordReset.graphql
    handler:
      code:
        src: ./src/triggerPasswordReset.ts
  
             
>>>>>>> 1012ba4a199388a743ba291c94328910694c2311
permissions:
  #User
  - operation: User.read
  - operation: User.create
    authenticated: true
  - operation: User.update
    authenticated: true
  - operation: User.delete
    authenticated: true

rootTokens: 
  - signup
  - authenticate
  - loggedInUser
  - updatePassword
  - updateEmail
<<<<<<< HEAD
  - passwordReset
  - triggerPasswordReset
  - sendPasswordResetEmail
=======
  - triggerPasswordReset
  - passwordReset
>>>>>>> 1012ba4a199388a743ba291c94328910694c2311

