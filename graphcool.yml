types: ./types.graphql

functions:
  signup:
    type: resolver
    schema: src/extensions/signup/signup.graphql
    handler:
      code: 
        src: src/extensions/signup/signup.ts

  authenticate:
    type: resolver
    schema: src/extensions/authenticate/authenticate.graphql
    handler:
      code: 
        src: src/extensions/authenticate/authenticate.ts

  loggedInUser:
    type: resolver
    schema: src/extensions/loggedInUser/loggedInUser.graphql
    handler:
      code: 
        src: src/extensions/loggedInUser/loggedInUser.ts

  updatePassword:
    type: resolver
    schema: src/extensions/updatePassword/updatePassword.graphql
    handler:
      code: 
        src: src/extensions/updatePassword/updatePassword.ts
   
  updateEmail:
    type: resolver
    schema: src/extensions/updateEmail/updateEmail.graphql
    handler:
      code: 
        src: src/extensions/updateEmail/updateEmail.ts
  
  passwordReset:
    type: resolver
    schema: ./src/extensions/passwordReset/passwordReset.graphql
    handler:
      code:
        src: ./src/extensions/passwordReset/passwordReset.ts
  
  triggerPasswordReset:
    type: resolver
    schema: ./src/extensions/triggerPasswordReset/triggerPasswordReset.graphql
    handler:
      code:
        src: ./src/extensions/triggerPasswordReset/triggerPasswordReset.ts
        # environment: ${env:SENDGRID_API_KEY}
  
permissions:
  #User
  - operation: User.read
    fields: [email, id, createdAt, updatedAt,resetToken]
  - operation: User.create
    authenticated: true
  - operation: User.update
    authenticated: true
  - operation: User.delete
    authenticated: true

rootTokens: 
  - signup
  - authenticate
  - loggedInUser
  - updatePassword
  - updateEmail
  - triggerPasswordReset
  - passwordReset

